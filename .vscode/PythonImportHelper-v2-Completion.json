[
    {
        "label": "akshare",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "akshare",
        "description": "akshare",
        "detail": "akshare",
        "documentation": {}
    },
    {
        "label": "yfinance",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "yfinance",
        "description": "yfinance",
        "detail": "yfinance",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "indicator_factory",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "indicator_factory",
        "description": "indicator_factory",
        "detail": "indicator_factory",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Message",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "Message",
        "description": "Message",
        "detail": "Message",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "AK_BOLL",
        "kind": 2,
        "importPath": "market_report",
        "description": "market_report",
        "peekOfCode": "def AK_BOLL(symbol, func=ak.stock_zh_index_daily):\n    df = func(symbol=symbol)\n    df.rename(columns={'日期':'date','开盘价':'open','最高价':'high','最低价':'low','收盘价':'close','成交量':'volume','持仓量':'keep_volume','动态结算价':'price'}, inplace=True)\n    df['date']=pd.to_datetime(df['date'])\n    df.set_index('date', inplace=True)\n    day_data = df.tail(20)\n    day_data[['DAY_BOLL','DAY_UB','DAY_LB']] = indf.QA_indicator_BOLL(day_data)\n    week_data = df['close'].resample('W').ohlc().tail(20)\n    week_data[['WK_BOLL','WK_UB','WK_LB']] = indf.QA_indicator_BOLL(week_data)\n    res = pd.DataFrame(pd.concat([day_data.iloc[-1],week_data.iloc[-1][['WK_BOLL','WK_UB','WK_LB']]])).T",
        "detail": "market_report",
        "documentation": {}
    },
    {
        "label": "YF_BOLL",
        "kind": 2,
        "importPath": "market_report",
        "description": "market_report",
        "peekOfCode": "def YF_BOLL(symbol, start, end):\n    data = yf.download(symbol, start=start, end=end, actions=True, group_by=\"ticker\")\n    data.columns = pd.MultiIndex.from_tuples([(a, b.lower()) for (a,b) in data.columns])\n    res_list = []\n    for i in symbol:\n        df = data.get(i).dropna()\n        day_data = df.tail(20)\n        day_data[['DAY_BOLL','DAY_UB','DAY_LB']] = indf.QA_indicator_BOLL(day_data)\n        week_data = df['close'].resample('W').ohlc().tail(20)\n        week_data[['WK_BOLL','WK_UB','WK_LB']] = indf.QA_indicator_BOLL(week_data)",
        "detail": "market_report",
        "documentation": {}
    },
    {
        "label": "AK_REPORT",
        "kind": 2,
        "importPath": "market_report",
        "description": "market_report",
        "peekOfCode": "def AK_REPORT():\n    data_list = []\n    for key, values in settings.get('akshare').items():\n         if key == 'futures_main_sina':\n            func = ak.futures_main_sina\n         elif key == 'stock_zh_index_daily':\n            func = ak.stock_zh_index_daily\n         for value in values:\n            data = AK_BOLL(value, func)\n            data_list.append(data)",
        "detail": "market_report",
        "documentation": {}
    },
    {
        "label": "YF_REPORT",
        "kind": 2,
        "importPath": "market_report",
        "description": "market_report",
        "peekOfCode": "def YF_REPORT(start, end):\n    symbols_list = []\n    for key, values in settings.get('yfinance').items():\n        symbols_list.extend(values)\n    return YF_BOLL(symbols_list, start, end)\nif __name__ == '__main__':\n    start = (date.today() - timedelta(days=150)).strftime(\"%Y-%m-%d\")\n    end = date.today().strftime(\"%Y-%m-%d\")\n    print(sys.argv)\n    smtpserver = sys.argv[1]",
        "detail": "market_report",
        "documentation": {}
    },
    {
        "label": "settings",
        "kind": 5,
        "importPath": "market_report",
        "description": "market_report",
        "peekOfCode": "settings = {\n    \"akshare\": \n        {\n            \"futures_main_sina\": [\"ZC0\",\"JM0\",\"I0\",\"CU0\",\"P0\",\"SR0\",\"CF0\",\"LH0\"],\n            \"stock_zh_index_daily\": [\"sh000001\",\"sz399006\",\"sz399001\"]\n        },\n    \"yfinance\": \n        {\n            \"BTC\": [\"BTC-USD\",\"USDT-USD\",\"ETH-USD\"],\n            \"GOLD\": [\"GC=F\",\"XAU=F\",\"CL=F\",\"NG=F\"],",
        "detail": "market_report",
        "documentation": {}
    }
]